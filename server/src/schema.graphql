type Query {
  pieces: [Piece!]!
}

type Mutation {
  createPiece(index: Int, connections: [ConnectionInput!]!): Piece
  deletePieceById(id: ID!): Piece
  deletePieceByIndex(index: Int!): Piece
  deleteLastPiece: Piece
}

input ConnectionInput {
  male: Boolean!
  shift: Direction!
  inclination: Direction!
}

type Piece {
  id: ID!
  index: Int!
  placed: Boolean!
  connections: [Connection!]!
}

type Connection {
  id: ID!
  index: Int!
  piece: Piece!
  male: Boolean!
  shift: Direction!
  inclination: Direction!
}

enum Direction {
  LEFT
  CENTER
  RIGHT
}
